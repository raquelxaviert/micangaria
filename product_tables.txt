products
create table public.products (
  id uuid not null default extensions.uuid_generate_v4 (),
  created_at timestamp with time zone not null default timezone ('utc'::text, now()),
  updated_at timestamp with time zone not null default timezone ('utc'::text, now()),
  name text not null,
  description text null,
  price numeric(10, 2) not null,
  compare_at_price numeric(10, 2) null,
  cost_price numeric(10, 2) null,
  category_id uuid null,
  type text null,
  style text null,
  image_url text null,
  image_alt text null,
  gallery_urls text[] null,
  colors text[] null,
  materials text[] null,
  sizes text[] null,
  weight_grams integer null,
  sku text null,
  barcode text null,
  track_inventory boolean null default false,
  quantity integer null default 0,
  allow_backorder boolean null default false,
  slug text null,
  meta_title text null,
  meta_description text null,
  is_active boolean null default true,
  is_featured boolean null default false,
  is_new_arrival boolean null default false,
  is_on_sale boolean null default false,
  sale_start_date timestamp with time zone null,
  sale_end_date timestamp with time zone null,
  promotion_text text null,
  tags text[] null,
  search_keywords text null,
  vendor text null,
  collection text null,
  notes text null,
  image_storage_path text null,
  gallery_storage_paths text[] null,
  care_instructions text null,
  show_colors_badge boolean null default true,
  show_materials_badge boolean null default true,
  show_sizes_badge boolean null default true,
  constraint products_pkey primary key (id),
  constraint products_sku_key unique (sku),
  constraint products_slug_key unique (slug),
  constraint products_category_id_fkey foreign KEY (category_id) references categories (id),
  constraint check_sku_format check ((sku ~ '^#20[0-9]{2}$'::text))
) TABLESPACE pg_default;

create index IF not exists idx_products_category on public.products using btree (category_id) TABLESPACE pg_default;

create index IF not exists idx_products_active on public.products using btree (is_active) TABLESPACE pg_default;

create index IF not exists idx_products_featured on public.products using btree (is_featured) TABLESPACE pg_default;

create index IF not exists idx_products_price on public.products using btree (price) TABLESPACE pg_default;

create index IF not exists idx_products_type on public.products using btree (type) TABLESPACE pg_default;

create trigger auto_generate_sku BEFORE INSERT on products for EACH row
execute FUNCTION generate_product_sku ();

create trigger update_image_url BEFORE INSERT
or
update on products for EACH row
execute FUNCTION generate_image_url ();

product_types
create table public.products (
  id uuid not null default extensions.uuid_generate_v4 (),
  created_at timestamp with time zone not null default timezone ('utc'::text, now()),
  updated_at timestamp with time zone not null default timezone ('utc'::text, now()),
  name text not null,
  description text null,
  price numeric(10, 2) not null,
  compare_at_price numeric(10, 2) null,
  cost_price numeric(10, 2) null,
  category_id uuid null,
  type text null,
  style text null,
  image_url text null,
  image_alt text null,
  gallery_urls text[] null,
  colors text[] null,
  materials text[] null,
  sizes text[] null,
  weight_grams integer null,
  sku text null,
  barcode text null,
  track_inventory boolean null default false,
  quantity integer null default 0,
  allow_backorder boolean null default false,
  slug text null,
  meta_title text null,
  meta_description text null,
  is_active boolean null default true,
  is_featured boolean null default false,
  is_new_arrival boolean null default false,
  is_on_sale boolean null default false,
  sale_start_date timestamp with time zone null,
  sale_end_date timestamp with time zone null,
  promotion_text text null,
  tags text[] null,
  search_keywords text null,
  vendor text null,
  collection text null,
  notes text null,
  image_storage_path text null,
  gallery_storage_paths text[] null,
  care_instructions text null,
  show_colors_badge boolean null default true,
  show_materials_badge boolean null default true,
  show_sizes_badge boolean null default true,
  constraint products_pkey primary key (id),
  constraint products_sku_key unique (sku),
  constraint products_slug_key unique (slug),
  constraint products_category_id_fkey foreign KEY (category_id) references categories (id),
  constraint check_sku_format check ((sku ~ '^#20[0-9]{2}$'::text))
) TABLESPACE pg_default;

create index IF not exists idx_products_category on public.products using btree (category_id) TABLESPACE pg_default;

create index IF not exists idx_products_active on public.products using btree (is_active) TABLESPACE pg_default;

create index IF not exists idx_products_featured on public.products using btree (is_featured) TABLESPACE pg_default;

create index IF not exists idx_products_price on public.products using btree (price) TABLESPACE pg_default;

create index IF not exists idx_products_type on public.products using btree (type) TABLESPACE pg_default;

create trigger auto_generate_sku BEFORE INSERT on products for EACH row
execute FUNCTION generate_product_sku ();

create trigger update_image_url BEFORE INSERT
or
update on products for EACH row
execute FUNCTION generate_image_url ();

product_styles
create table public.product_styles (
  id uuid not null default gen_random_uuid (),
  name text not null,
  display_name text not null,
  description text null,
  is_default boolean null default true,
  created_at timestamp with time zone null default now(),
  constraint product_styles_pkey primary key (id),
  constraint product_styles_name_key unique (name)
) TABLESPACE pg_default;

user_favorites
create table public.user_favorites (
  id uuid not null default extensions.uuid_generate_v4 (),
  created_at timestamp with time zone not null default timezone ('utc'::text, now()),
  user_id uuid null,
  product_id uuid null,
  constraint user_favorites_pkey primary key (id),
  constraint user_favorites_user_id_product_id_key unique (user_id, product_id),
  constraint user_favorites_product_id_fkey foreign KEY (product_id) references products (id) on delete CASCADE,
  constraint user_favorites_user_id_fkey foreign KEY (user_id) references auth.users (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_user_favorites_user on public.user_favorites using btree (user_id) TABLESPACE pg_default;

create index IF not exists idx_user_favorites_product on public.user_favorites using btree (product_id) TABLESPACE pg_default;

orders
create table public.orders (
  id uuid not null default gen_random_uuid (),
  created_at timestamp with time zone not null default timezone ('utc'::text, now()),
  updated_at timestamp with time zone null default now(),
  user_id uuid null,
  preference_id text null,
  external_reference text null,
  init_point text null,
  sandbox_init_point text null,
  payment_id text null,
  payment_status text null,
  payment_method text null,
  subtotal numeric(10, 2) not null,
  shipping_cost numeric(10, 2) null default 0,
  total numeric(10, 2) not null,
  items jsonb not null,
  shipping_option jsonb null,
  customer_info jsonb null,
  shipping_address jsonb null,
  shipment_id text null,
  label_url text null,
  tracking_code text null,
  shipping_status text null default 'pending'::text,
  status text null default 'pending'::text,
  constraint orders_pkey primary key (id),
  constraint orders_user_id_fkey foreign KEY (user_id) references auth.users (id) on delete set null
) TABLESPACE pg_default;

create index IF not exists idx_orders_external_reference on public.orders using btree (external_reference) TABLESPACE pg_default;

create index IF not exists idx_orders_preference_id on public.orders using btree (preference_id) TABLESPACE pg_default;

create index IF not exists idx_orders_status on public.orders using btree (status) TABLESPACE pg_default;

create index IF not exists idx_orders_user_id on public.orders using btree (user_id) TABLESPACE pg_default;

collections
create table public.collections (
  id uuid not null default gen_random_uuid (),
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  name text not null,
  description text null,
  slug text not null,
  color text null default '#6b7280'::text,
  is_active boolean null default true,
  display_order integer null default 0,
  meta_title text null,
  meta_description text null,
  constraint collections_pkey primary key (id),
  constraint collections_slug_key unique (slug)
) TABLESPACE pg_default;

create index IF not exists idx_collections_active on public.collections using btree (is_active) TABLESPACE pg_default;

create index IF not exists idx_collections_order on public.collections using btree (display_order) TABLESPACE pg_default;

create index IF not exists idx_collections_slug on public.collections using btree (slug) TABLESPACE pg_default;

collection_products
create table public.collection_products (
  id uuid not null default gen_random_uuid (),
  created_at timestamp with time zone null default now(),
  collection_id uuid null,
  product_id uuid null,
  display_order integer null default 0,
  constraint collection_products_pkey primary key (id),
  constraint collection_products_collection_id_product_id_key unique (collection_id, product_id),
  constraint collection_products_collection_id_fkey foreign KEY (collection_id) references collections (id) on delete CASCADE,
  constraint collection_products_product_id_fkey foreign KEY (product_id) references products (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_collection_products_collection on public.collection_products using btree (collection_id) TABLESPACE pg_default;

create index IF not exists idx_collection_products_product on public.collection_products using btree (product_id) TABLESPACE pg_default;

create index IF not exists idx_collection_products_order on public.collection_products using btree (collection_id, display_order) TABLESPACE pg_default;

categories
create table public.categories (
  id uuid not null default extensions.uuid_generate_v4 (),
  created_at timestamp with time zone not null default timezone ('utc'::text, now()),
  name text not null,
  description text null,
  slug text not null,
  is_active boolean null default true,
  constraint categories_pkey primary key (id),
  constraint categories_name_key unique (name),
  constraint categories_slug_key unique (slug)
) TABLESPACE pg_default;